{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../IDE/public/js/src/IDE-browser.js","../IDE/public/js/src/Models/Model.js","../IDE/public/js/src/Views/ConsoleView.js","../IDE/public/js/src/Views/DebugView.js","../IDE/public/js/src/Views/EditorView.js","../IDE/public/js/src/Views/FileView.js","../IDE/public/js/src/Views/ProjectView.js","../IDE/public/js/src/Views/SettingsView.js","../IDE/public/js/src/Views/TabView.js","../IDE/public/js/src/Views/ToolbarView.js","../IDE/public/js/src/Views/View.js","../IDE/public/js/src/console.js","../IDE/public/js/src/main.js","node_modules/events/events.js"],"names":[],"mappingshcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClntpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// IDE controller\nmodule.exports = {};\n\nvar Model = require('./Models/Model');\n\n// set up models\nvar models = {};\nmodels.project = new Model();\nmodels.settings = new Model();\nmodels.status = new Model();\nmodels.error = new Model();\nmodels.debug = new Model();\n\n// hack to prevent first status update causing wrong notifications\nmodels.status.setData({running: false, building: false});\n \n// set up views\n// tab view\nvar tabView = require('./Views/TabView');\ntabView.on('change', () => editorView.emit('resize') );\n\n// settings view\nvar settingsView = new (require('./Views/SettingsView'))('settingsManager', [models.project, models.settings], models.settings);\nsettingsView.on('project-settings', (data) => {\n\tdata.currentProject = models.project.getKey('currentProject');\n\t//console.log('project-settings', data);\n\tsocket.emit('project-settings', data);\n});\nsettingsView.on('IDE-settings', (data) => {\n\tdata.currentProject = models.project.getKey('currentProject');\n\t//console.log('IDE-settings', data);\n\tsocket.emit('IDE-settings', data);\n});\n\n// project view\nvar projectView = new (require('./Views/ProjectView'))('projectManager', [models.project]);\nprojectView.on('message', (event, data) => {\n\tif (!data.currentProject && models.project.getKey('currentProject')){\n\t\tdata.currentProject = models.project.getKey('currentProject');\n\t}\n\tdata.timestamp = performance.now();\n\tconsoleView.emit('openNotification', data);\n\tsocket.emit(event, data);\n});\n\n// file view\nvar fileView = new (require('./Views/FileView'))('fileManager', [models.project]);\nfileView.on('message', (event, data) => {\n\tif (!data.currentProject && models.project.getKey('currentProject')){\n\t\tdata.currentProject = models.project.getKey('currentProject');\n\t}\n\tif (!data.fileName && models.project.getKey('fileName')){\n\t\tdata.fileName = models.project.getKey('fileName');\n\t}\n\tdata.timestamp = performance.now();\n\tconsoleView.emit('openNotification', data);\n\tsocket.emit(event, data);\n});\n\n// editor view\nvar editorView = new (require('./Views/EditorView'))('editor', [models.project, models.error, models.settings, models.debug], models.settings);\neditorView.on('change', (fileData) => {\n\tsocket.emit('process-event', {\n\t\tevent\t\t\t: 'upload',\n\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\tnewFile\t\t\t: models.project.getKey('fileName'),\n\t\tfileData,\n\t\tcheckSyntax\t\t: parseInt(models.settings.getKey('liveSyntaxChecking'))\n\t});\n});\neditorView.on('breakpoint', (line) => {\n\tvar breakpoints = models.project.getKey('breakpoints');\n\tfor (let i=0; i<breakpoints.length; i++){\n\t\tif (breakpoints[i].line === line && breakpoints[i].file === models.project.getKey('fileName')){\n\t\t\tsocket.emit('debugger-event', 'removeBreakpoint', breakpoints[i]);\n\t\t\tmodels.project.spliceFromKey('breakpoints', i);\n\t\t\treturn;\n\t\t}\n\t}\n\tvar newBreakpoint = {\n\t\tline,\n\t\tfile: models.project.getKey('fileName')\n\t};\n\tsocket.emit('debugger-event', 'addBreakpoint', newBreakpoint);\n\tmodels.project.pushIntoKey('breakpoints', newBreakpoint);\n\t//console.log('after', breakpoints);\n\t//models.project.setKey('breakpoints', breakpoints);\n});\n\n// toolbar view\nvar toolbarView = new (require('./Views/ToolbarView'))('toolBar', [models.project, models.error, models.status, models.settings, models.debug]);\ntoolbarView.on('process-event', (event) => {\n\tvar breakpoints;\n\tif (models.debug.getKey('debugMode')) breakpoints = models.project.getKey('breakpoints')\n\tsocket.emit('process-event', {\n\t\tevent,\n\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\tdebug\t\t\t: models.debug.getKey('debugMode'),\n\t\tbreakpoints\n\t});\n});\ntoolbarView.on('clear-console', () => consoleView.emit('clear') );\n\n// console view\nvar consoleView = new (require('./Views/ConsoleView'))('IDEconsole', [models.status, models.project, models.error, models.settings, models.debug], models.settings);\nconsoleView.on('focus', (focus) =>  models.project.setKey('focus', focus) );\nconsoleView.on('open-file', (fileName, focus) => {\n\tvar data = {\n\t\tfunc: 'openFile',\n\t\tfileName, \n\t\tfocus, \n\t\tcurrentProject: models.project.getKey('currentProject')\n\t};\n\tsocket.emit('project-event', data);\n});\nconsoleView.on('input', (value) => {\n\tif (value){\n\t\tvar val = value.split(' ')\n\t\tvar command = val.splice(0, 1);\n\t\tif (command[0] === 'gdb' && models.debug.getKey('debugMode')) socket.emit('debugger-event', 'exec', val.join(' '));\n\t}\n});\n\n// debugger view\nvar debugView = new (require('./Views/DebugView'))('debugger', [models.debug, models.settings, models.project]);\ndebugView.on('debugger-event', (func) => socket.emit('debugger-event', func) );\ndebugView.on('debug-mode', (status) => models.debug.setKey('debugMode', status) );\n\n// setup socket\nvar socket = io('/IDE');\n\n// socket events\nsocket.on('report-error', (error) => consoleView.emit('warn', error.message || error) );\n\nsocket.on('init', (data) => {\n\t\n\t$('#console-disconnect').remove();\n\t\n\t//console.log(data);\n\tvar timestamp = performance.now()\n\tsocket.emit('project-event', {func: 'openProject', currentProject: data[2].project, timestamp})\t\n\tconsoleView.emit('openNotification', {func: 'init', timestamp});\n\t\n\tmodels.project.setData({projectList: data[0], exampleList: data[1], currentProject: data[2].project});\n\tmodels.settings.setData(data[2]);\n\t\n\t//models.project.print();\n\t//models.settings.print();\n\t\n\tsocket.emit('set-time', getDateString());\n});\n\n// project events\nsocket.on('project-data', (data) => {\n\tvar debug;\n\tif (data.debug){\n\t\tdebug = data.debug\n\t\tdata.debug = undefined;\n\t}\n\tconsoleView.emit('closeNotification', data)\n\tmodels.project.setData(data);\n\tif (debug){\n\t\tmodels.debug.setData(debug);\n\t}\n\t//models.settings.setData(data.settings);\n\t//models.project.print();\n});\nsocket.on('project-list', (project, list) =>  {\n\tif (list.indexOf(models.project.getKey('currentProject')) === -1){\n\t\t// this project has just been deleted\n\t\tconsole.log('project-list', 'openProject');\n\t\tsocket.emit('project-event', {func: 'openProject', currentProject: project});\n\t}\n\tmodels.project.setKey('projectList', list);\n});\nsocket.on('file-list', (project, list) => {\n\tif (project === models.project.getKey('currentProject')){\n\t\tif (list.indexOf(models.project.getKey('fileName')) === -1){\n\t\t\t// this file has just been deleted\n\t\t\tconsole.log('file-list', 'openProject');\n\t\t\tsocket.emit('project-event', {func: 'openProject', currentProject: project});\n\t\t}\n\t\tmodels.project.setKey('fileList', list);\n\t}\n});\nsocket.on('file-changed', (project, fileName) => {\n\tif (project === models.project.getKey('currentProject') && fileName === models.project.getKey('fileName')){\n\t\tconsole.log('file changed!');\n\t\tmodels.project.setKey('readOnly', true);\n\t\tmodels.project.setKey('fileData', 'This file has been edited in another window. Reopen the file to continue');\n\t\t//socket.emit('project-event', {func: 'openFile', currentProject: project, fileName: fileName});\n\t}\n});\n\nsocket.on('status', (status, project) => {\n\tif (project === models.project.getKey('currentProject') || project === undefined){\n\t\tmodels.status.setData(status);\n\t\t//console.log('status', status);\n\t}\n});\n\nsocket.on('project-settings-data', (project, settings) => {\n\t//console.log('project-settings-data', settings);\n\tif (project === models.project.getKey('currentProject'))\n\t\tmodels.project.setData(settings);\n});\nsocket.on('IDE-settings-data', (settings) => models.settings.setData(settings) );\n\nsocket.on('cpu-usage', (data) => models.status.setKey('CPU', data) );\n\nsocket.on('disconnect', () => {\n\tconsoleView.disconnect();\n\tmodels.project.setKey('readOnly', true);\n});\n\nsocket.on('debugger-data', (data) => {\n//console.log('b', data.debugProject, models.project.getKey('currentProject'), data.debugFile, models.project.getKey('fileName'));\n\tif (data.debugProject === undefined || data.debugProject === models.project.getKey('currentProject')){ \n\t\t//(data.debugFile === undefined || data.debugFile === models.project.getKey('fileName'))){\n\t\tvar debugFile = data.debugFile;\n\t\tif (debugFile && debugFile !== models.project.getKey('fileName')){\n\t\t\t//console.log(debugFile);\n\t\t\tvar newData = {\n\t\t\t\tfunc\t\t\t: 'openFile',\n\t\t\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\t\t\tfileName\t\t: models.project.getKey('fileName'),\n\t\t\t\tnewFile\t\t\t: debugFile,\n\t\t\t\ttimestamp\t\t: performance.now(),\n\t\t\t\tdebug\t\t\t: {debugLine: data.debugLine, debugFile}\n\t\t\t};\n\t\t\tconsoleView.emit('openNotification', newData);\n\t\t\tsocket.emit('project-event', newData);\n\t\t} else {\n\t\t\t//console.log(data);\n\t\t\tmodels.debug.setData(data);\n\t\t}\n\t}\n});\nsocket.on('debugger-variables', (project, variables) => {\n\tif (project === models.project.getKey('currentProject')){\n\t\tmodels.debug.setKey('variables', variables);\n\t}\n});\n\n// model events\n// build errors\nmodels.status.on('set', (data, changedKeys) => {\n\tif (changedKeys.indexOf('syntaxError') !== -1){\n\t\tparseErrors(data.syntaxError);\n\t}\n});\n// debug mode\nmodels.debug.on('change', (data, changedKeys) => {\n\tif (changedKeys.indexOf('debugMode') !== -1){\n\t\t//console.log(!data.debugMode, models.debug.getKey('debugRunning'));\n\t\tif (!data.debugMode && models.debug.getKey('debugRunning')) socket.emit('debugger-event', 'stop');\n\t\tvar data = {\n\t\t\tfunc\t\t\t: 'cleanProject',\n\t\t\tcurrentProject\t: models.project.getKey('currentProject'),\n\t\t\ttimestamp\t\t: performance.now()\n\t\t};\n\t\tconsoleView.emit('openNotification', data);\n\t\tsocket.emit('project-event', data);\n\t}\n});\n\n\n// history\n{\n\tlet lastState = {}, poppingState = true;\n\t\n\t// file / project changed\n\tmodels.project.on('change', (data, changedKeys) => {\n\t\tif (changedKeys.indexOf('currentProject') !== -1 || changedKeys.indexOf('fileName') !== -1){\n\t\t\tvar state = {file: data.fileName, project: data.currentProject};\n\t\t\tif (state.project !== lastState.project || state.file !== lastState.file){\n\t\t\t\t$('title').html(data.fileName+', '+data.currentProject);\n\t\t\t\tif (!poppingState){\n\t\t\t\t\t//console.log('push', state);\n\t\t\t\t\thistory.pushState(state, null, null);\n\t\t\t\t}\n\t\t\t\tpoppingState = false\n\t\t\t\tlastState = state;\n\t\t\t}\n\t\t}\n\t});\n\n\t// load previously open file / project when browser's back button is clicked\n\twindow.addEventListener('popstate', function(e) {\n\t\tif (e.state){\n\t\t\tconsole.log('opening project '+e.state.project+' file '+e.state.file);\n\t\t\tvar data = {\n\t\t\t\tcurrentProject\t: e.state.project,\n\t\t\t\tfileName\t\t: e.state.file,\n\t\t\t\tfunc\t\t\t: 'openFile',\n\t\t\t\ttimestamp \t\t: performance.now()\n\t\t\t};\n\t\t\tconsoleView.emit('openNotification', data);\n\t\t\tsocket.emit('project-event', data);\n\t\t\tpoppingState = true;\n\t\t}\n\t});\n}\n\n// local functions\n// parse errors from g++\nfunction parseErrors(data){\n//console.log('parsing', data, data.split('\\n'));\n\tdata = data.split('\\n');\n\t\n\tvar errors = [];\n\tfor (let i=0; i<data.length; i++){\n\n\t\t// ignore errors which begin with 'make'\n\t\tif (data[i].length > 1 && data[i].slice(0,4) !== 'make'){\n\t\n\t\t\tvar msg = data[i].split('\\n');\n\t\t\n\t\t\tfor (let j=0; j<msg.length; j++){\n\t\t\n\t\t\t\tvar str = msg[j].split(':');\n\t\t\t\t//console.log(str);\n\t\t\t\t// str[0] -> file name + path\n\t\t\t\t// str[1] -> row number\n\t\t\t\t// str[2] -> column number\n\t\t\t\t// str[3] -> type of error\n\t\t\t\t// str[4+] > error message\n\t\t\t\n\t\t\t\tif (str[3] === ' error'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"error\"\n\t\t\t\t\t});\n\t\t\t\t} else if (str[3] == ' fatal error'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"error\"\n\t\t\t\t\t});\n\t\t\t\t} else if (str[3] == ' warning'){\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tfile: str[0].split('/').pop(),\n\t\t\t\t\t\trow: str[1]-1,\n\t\t\t\t\t\tcolumn: str[2],\n\t\t\t\t\t\ttext: str.slice(4).join(':').slice(1) + '\\ncolumn: '+str[2],\n\t\t\t\t\t\ttype: \"warning\"\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t//console.log('rejected error string: '+str);\n\t\t\t\t\tif (str[2] && str[2].indexOf('linker') !== -1){\n\t\t\t\t\t\tconsole.log('linker error');\n\t\t\t\t\t\tconsoleView.emit('warn', 'linker error detected, set verbose build output in settings for details');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// if no gcc errors have been parsed correctly, but make still thinks there is an error\n\t// error will contain string 'make: *** [<path>] Error 1'\n\tif (!errors.length && (data.indexOf('make: *** ') !== -1) && (data.indexOf('Error 1') !== -1)){\n\t\terrors.push({\n\t\t\ttext: data,\n\t\t\ttype: 'error'\n\t\t});\n\t}\n\t\n\tvar currentFileErrors = [], otherFileErrors = [];\n\tfor (let err of errors){\n\t\tif (!err.file || err.file === models.project.getKey('fileName')){\n\t\t\terr.currentFile = true;\n\t\t\tcurrentFileErrors.push(err);\n\t\t} else {\n\t\t\terr.currentFile = false;\n\t\t\terr.text = 'In file '+err.file+': '+err.text;\n\t\t\totherFileErrors.push(err);\n\t\t}\n\t}\n\t\n\tmodels.error.setKey('allErrors', errors);\n\tmodels.error.setKey('currentFileErrors', currentFileErrors);\n\tmodels.error.setKey('otherFileErrors', otherFileErrors);\n\t\n\tmodels.error.setKey('verboseSyntaxError', data);\n\n}\n\nfunction getDateString(){\n\n\tvar str = '';\n\t\n\t// get browser's system's time\n\tvar date = new Date();\n\t\n\t// format into string suitable for linux date command\n\tvar month = date.getMonth() + 1;\n\tif (month < 10){\n\t\tstr += '0'+month;\n\t} else {\n\t\tstr += month;\n\t}\n\t\n\tvar day = date.getDate();\n\tif (day < 10){\n\t\tstr += '0'+day;\n\t} else {\n\t\tstr += day;\n\t}\n\t\n\tvar hour = date.getHours();\n\tif (hour < 10){\n\t\tstr += '0'+hour;\n\t} else {\n\t\tstr += hour;\n\t}\n\t\n\tvar minutes = date.getMinutes();\n\tif (minutes < 10){\n\t\tstr += '0'+minutes;\n\t} else {\n\t\tstr += minutes;\n\t}\n\t\n\tstr += date.getFullYear();\n\t\n\tstr += '.';\n\t\n\tvar seconds = date.getSeconds();\n\tif (seconds < 10){\n\t\tstr += '0'+seconds;\n\t} else {\n\t\tstr += seconds;\n\t}\n\t\n\treturn str;\n\t\n}\n\n\n\n\n\n\n","var EventEmitter = require('events').EventEmitter;\n\nclass Model extends EventEmitter{\n\n\tconstructor(data){\n\t\tsuper();\n\t\tvar _data = data || {};\n\t\tthis._getData = () => _data;\n\t}\n\t\n\tgetKey(key){\n\t\treturn this._getData()[key];\n\t}\n\t\n\tsetData(newData){\n\t\tif (!newData) return;\n\t\tvar newKeys = [];\n\t\tfor (let key in newData){\n\t\t\tif (!_equals(newData[key], this._getData()[key], false)){\n\t\t\t\tnewKeys.push(key);\n\t\t\t\tthis._getData()[key] = newData[key];\n\t\t\t}\n\t\t}\n\t\tif (newKeys.length) {\n\t\t\t//console.log('changed setdata');\n\t\t\tthis.emit('change', this._getData(), newKeys);\n\t\t}\n\t\tthis.emit('set', this._getData(), Object.keys(newData));\n\t}\n\t\n\tsetKey(key, value){\n\t\tif (!_equals(value, this._getData()[key], false)){\n\t\t\tthis._getData()[key] = value;\n\t\t\t//console.log('changed setkey');\n\t\t\tthis.emit('change', this._getData(), [key]);\n\t\t}\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tpushIntoKey(key, value){\n\t\tthis._getData()[key].push(value);\n\t\tthis.emit('change', this._getData(), [key]);\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tspliceFromKey(key, index){\n\t\tthis._getData()[key].splice(index, 1);\n\t\tthis.emit('change', this._getData(), [key]);\n\t\tthis.emit('set', this._getData(), [key]);\n\t}\n\t\n\tprint(){\n\t\tconsole.log(this._getData());\n\t}\n\t\n}\n\nmodule.exports = Model;\n\nfunction _equals(a, b, log){\n\tif (log) console.log('a:', a, 'b:', b);\n\tif (a instanceof Array && b instanceof Array){\n\t\tif (log) console.log('arrays', 'a:', a, 'b:', b, (a.length === b.length), a.every( function(element, index){ return _equals(element, b[index], log) }));\n\t\treturn ( (a.length === b.length) && a.every( function(element, index){ return _equals(element, b[index], log) }) );\n\t} else if (a instanceof Object && b instanceof Object){\n\t\tif (log) console.log('objects', 'a:', a, 'b:', b);\n\t\tfor (let c in a){ \n\t\t\tif (log) console.log('a[c]:', a[c], 'b[c]:', b[c], 'c:', c);\n\t\t\tif (!_equals(a[c], b[c], log)) return false;\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (log) console.log('a:', a, 'b:', b, Object.is(a, b), (a === b));\n\t\treturn Object.is(a, b);\n\t}\n}\n\t\n\t\n\t\n\t\n\t\n\t\n\t","'use strict';\nvar View = require('./View');\nvar _console = require('../console');\n\nvar verboseDebugOutput = false;\n\nclass ConsoleView extends View{\n\n\tconstructor(className, models, settings){\n\t\tsuper(className, models, settings);\t\t\n\t\t\n\t\tthis.on('clear', () => _console.clear() );\n\t\t_console.on('focus', (focus) => this.emit('focus', focus) );\n\t\t_console.on('open-file', (fileName, focus) => this.emit('open-file', fileName, focus) );\n\t\t\n\t\tthis.on('openNotification', this.openNotification);\n\t\tthis.on('closeNotification', this.closeNotification);\n\t\tthis.on('warn', function(warning, id){\n\t\t\tconsole.log(warning);\n\t\t\t_console.warn(warning, id);\n\t\t});\n\t\t\n\t\tthis.form = document.getElementById('beaglert-consoleForm');\n\t\tthis.input = document.getElementById('beaglert-consoleInput');\n\t\t\n\t\t// console command line input events\n\t\tthis.form.addEventListener('submit', (e) => {\n\t\t\te.preventDefault();\n\t\t\tthis.emit('input', this.input.value);\n\t\t\tthis.input.value = '';\n\t\t});\n\t}\n\t\n\topenNotification(data){\n\t\tif (!funcKey[data.func]) console.log(data.func);\n\t\tvar output = funcKey[data.func];\n\t\tif (data.newProject || data.currentProject) output += ' '+(data.newProject || data.currentProject);\n\t\tif (data.newFile || data.fileName) output += ' '+(data.newFile || data.fileName);\n\t\t_console.notify(output+'...', data.timestamp);\n\t}\n\tcloseNotification(data){\n\t\tif (data.error){\n\t\t\t_console.reject(' '+data.error, data.timestamp);\n\t\t} else {\n\t\t\t_console.fulfill(' done', data.timestamp);\n\t\t}\n\t}\n\tdisconnect(){\n\t\tconsole.log('disconnected');\n\t\t_console.warn('You have been disconnected from the Bela IDE and any more changes you make will not be saved. Please check your USB connection and reboot your BeagleBone', 'console-disconnect');\n\t}\n\t\n\t// model events\n\t// syntax\n\t_syntaxLog(log, data){\n\t\tif (this.settings.fullSyntaxCheckOutput){\n\t\t\t_console.log(log);\n\t\t}\n\t}\n\t__verboseSyntaxError(log, data){\n\t\tif (parseInt(this.settings.getKey('verboseErrors'))){\n\t\t\tfor (let line of log){\n\t\t\t\t_console.log(line.split(' ').join('&nbsp;'));\n\t\t\t}\n\t\t}\n\t}\n\t__allErrors(errors, data){\n\t//console.log(data);\n\t\t_console.newErrors(errors);\n\t}\n\t\n\t// build\n\t_buildLog(log, data){\n\t//console.log(log, data);\n\t\t//if (this.settings.fullBuildOutput){\n\t\t\t_console.log(log);\n\t\t//}\n\t}\n\t\n\t// bela\n\t__belaLog(log, data){\n\t\t_console.log(log);\n\t}\n\t\n\t_building(status, data){\n\t\tvar timestamp = performance.now();\n\t\tif (status){\n\t\t\t_console.notify('Building project...', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t} else {\n\t\t\t_console.notify('Build finished', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t}\n\t}\n\t_running(status, data){\n\t\tvar timestamp = performance.now();\n\t\tif (status){\n\t\t\t_console.notify('Running project...', timestamp, true);\n\t\t\t_console.fulfill('', timestamp, true);\n\t\t} else {\n\t\t\t_console.notify('Bela stopped', timestamp, true);\n\t\t\tif (data && data.belaResult && data.belaResult.signal && data.belaResult.signal !== 'undefined'){\n\t\t\t\t_console.reject(' with signal '+data.belaResult.signal, timestamp, true);\n\t\t\t} else {\n\t\t\t\t_console.fulfill('', timestamp, true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t_CPU(data){\n\t\tif (parseInt(this.settings.getKey('cpuMonitoringVerbose')) && data.bela != 0){\n\t\t\t_console.log(data.bela.split(' ').join('&nbsp;'));\n\t\t}\n\t}\n\t\n\t_consoleDelete(value){\n\t\t_console.setConsoleDelete(parseInt(value));\n\t}\n\t_verboseDebug(value){\n\t\tverboseDebugOutput = parseInt(value);\n\t}\n\t\n\t__debugReason(reason){\n\t\tconsole.log('reason', reason);\n\t\tvar timestamp = performance.now();\n\t\t_console.notify(reason, timestamp, true);\n\t\tif (reason === 'exited' || reason === 'exited-signalled')\n\t\t\t_console.reject('', timestamp, true);\n\t\telse \n\t\t\t_console.fulfill('', timestamp, false);\n\t}\n\t_debugSignal(signal){\n\t\tconsole.log('signal', signal);\n\t\tvar timestamp = performance.now();\n\t\t_console.notify(signal, timestamp, true);\n\t\t_console.reject('', timestamp, true);\n\t}\n\t_gdbLog(data){\n\t\tif (verboseDebugOutput) _console.log(data);\n\t\telse console.log(data);\n\t}\n\t__debugBelaLog(data){\n\t\t_console.log(data);\n\t}\n\n\t\n}\n\nmodule.exports = ConsoleView;\n\nvar funcKey = {\n\t'openProject'\t: 'Opening project',\n\t'openExample'\t: 'Opening example',\n\t'newProject'\t: 'Creating project',\n\t'saveAs'\t\t: 'Saving project',\n\t'deleteProject'\t: 'Deleting project',\n\t'cleanProject'\t: 'Cleaning project',\n\t'openFile'\t\t: 'Opening file',\n\t'newFile'\t\t: 'Creating file',\n\t'uploadFile'\t: 'Uploading file',\n\t'renameFile'\t: 'Renaming file',\n\t'deleteFile'\t: 'Deleting file',\n\t'init'\t\t\t: 'Initialising'\n};","var View = require('./View');\n\nclass DebugView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\tthis._debugMode(false);\n\t}\n\t\n\t// UI events\n\tselectChanged($element, e){\n\t\tvar data = $element.data();\n\t\tvar func = data.func;\n\t\tif (func && this[func]){\n\t\t\tthis[func]($element.val());\n\t\t}\n\t}\n\tbuttonClicked($element, e){\n\t\tthis.setLocation('');\n\t\tthis.emit('debugger-event', $element.data().func);\n\t}\n\tdebugMode(status){\n\t\tthis.emit('debug-mode', (status==true));\n\t}\n\t\n\t// model events\n\t_debugMode(status){\n\t\tif (!status){\n\t\t\tthis.$parents.find('button').prop('disabled', 'disabled');\n\t\t}\n\t}\n\t// debugger process has started or stopped\n\t_debugRunning(status){\n\t\tthis.clearVariableList();\n\t\tthis.clearBacktrace();\n\t\tthis.$parents.find('button').prop('disabled', 'disabled');\n\t\tif (!status) this.setLocation('n/a');\n\t}\n\t// debugger is doing something\n\t_debugBelaRunning(status){\n\t\tif (!status){\n\t\t\tthis.$parents.find('button:not(#debugInterrupt)').prop('disabled', '');\n\t\t\t$('#expList, #backtraceList').removeClass('debuggerOutOfScope');\n\t\t} else {\n\t\t\tthis.$parents.find('button:not(#debugInterrupt)').prop('disabled', 'disabled');\n\t\t\t$('#expList, #backtraceList').addClass('debuggerOutOfScope');\n\t\t}\n\t}\n\t_debugInterruptable(status){\n\t\tif (status) $('#debugInterrupt').prop('disabled', '');\n\t\telse $('#debugInterrupt').prop('disabled', 'disabled');\n\t}\n\t_debugStatus(value, data){\n\t\tif (value) this.setStatus(value);\n\t}\n\t_debugReason(value){\n\t\tthis.setStatus($('#debuggerStatus').html()+', '+value);\n\t}\n\t_debugLine(line, data){\n\t\tvar location = '';\n\t\tif (data.debugFile)\n\t\t\tlocation += data.debugFile+', line ';\n\t\t\n\t\tif (data.debugLine)\n\t\t\tlocation += data.debugLine;\n\t\t\n\t\tthis.setLocation(location);\n\t}\n\t_variables(variables){\n\t\tconsole.log(variables);\n\t\tthis.clearVariableList();\n\t\tfor (let variable of variables){\n\t\t\tthis.addVariable($('#expList'), variable);\n\t\t}\n\t\tprepareList();\n\t}\n\t_backtrace(trace){\n\t\tthis.clearBacktrace();\n\t\tfor (let item of trace){\n\t\t\t$('<li></li>').text(item).appendTo($('#backtraceList'));\n\t\t}\n\t}\n\t\n\t// utility methods\n\tsetStatus(value){\n\t\t$('#debuggerStatus').html(value);\n\t}\n\tsetLocation(value){\n\t\t$('#debuggerLocation').html(value);\n\t}\n\tclearVariableList(){\n\t\t$('#expList').empty();\n\t}\n\tclearBacktrace(){\n\t\t$('#backtraceList').empty();\n\t}\n\taddVariable(parent, variable){\n\t\tvar name;\n\t\tif (variable.key) \n\t\t\tname = variable.key;\n\t\telse {\n\t\t\tname = variable.name.split('.');\n\t\t\tif (name.length) name = name[name.length-1];\n\t\t}\n\t\t//console.log('adding variable', name, variable);\n\t\tvar li = $('<li></li>');\n\t\tvar table = $('<table></table>').appendTo(li);\n\t\t$('<td></td>').text(variable.type).addClass('debuggerType').appendTo(table);\n\t\t$('<td></td>').text(name).addClass('debuggerName').appendTo(table);\n\t\tvar valTD = $('<td></td>').text(variable.value).addClass('debuggerValue').appendTo(table);\n\t\tli.attr('id', variable.name).appendTo(parent);\n\t\tif (variable.numchild && variable.children && variable.children.length){\n\t\t\tvar ul = $('<ul></ul>').appendTo(li);\n\t\t\tfor (let child of variable.children){\n\t\t\t\tthis.addVariable(ul, child);\n\t\t\t}\n\t\t}\n\t\tif (variable.value == undefined){\n\t\t\tli.addClass('debuggerOutOfScope');\n\t\t\tvalTD.text('out of scope');\n\t\t}\n\t}\n}\n\nmodule.exports = DebugView;\n\nfunction prepareList() {\n    $('#expList').find('li:has(ul)').each(function(){\n    \tvar $this = $(this);\n    \tif (!$this.hasClass('collapsed')){\n    \t\t$this.click( function(event) {\n\t\t\t\t$(this).toggleClass('expanded');\n\t\t\t\t$(this).children('ul').toggle('fast');\n\t\t\t\treturn false;\n\t\t\t})\n\t\t\t.addClass('collapsed')\n\t\t\t.children('ul').hide();\n    \t}\n    });\n    \n};\n\n\n\n\n\n\n\n\n\n","var View = require('./View');\nvar Range = ace.require('ace/range').Range;\n\nconst uploadDelay = 50;\n\nvar uploadBlocked = false;\nvar currentFile;\n\nclass EditorView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\tthis.editor = ace.edit('editor');\n\t\tace.require(\"ace/ext/language_tools\");\n\t\t\n\t\t// set syntax mode\n\t\tthis.editor.session.setMode('ace/mode/c_cpp');\n\t\tthis.editor.$blockScrolling = Infinity;\n\t\t\n\t\t// set theme\n\t\tthis.editor.setTheme(\"ace/theme/github\");\n\t\t\n\t\t// autocomplete settings\n\t\tthis.editor.setOptions({\n\t\t\tenableBasicAutocompletion: true,\n\t\t\tenableLiveAutocompletion: false,\n\t\t\tenableSnippets: true\n\t\t});\n\t\t\n\t\t// this function is called when the user modifies the editor\n\t\tthis.editor.session.on('change', (e) => {\n\t\t\t//console.log('upload', !uploadBlocked);\n\t\t\tif (!uploadBlocked) this.editorChanged();\n\t\t});\n\t\t\n\t\t// set/clear breakpoints when the gutter is clicked\n\t\tthis.editor.on(\"guttermousedown\", (e) => { \n\t\t\tvar target = e.domEvent.target; \n\t\t\tif (target.className.indexOf(\"ace_gutter-cell\") == -1) \n\t\t\t\treturn; \n\t\t\tif (!this.editor.isFocused()) \n\t\t\t\treturn; \n\t\t\tif (e.clientX > 25 + target.getBoundingClientRect().left) \n\t\t\t\treturn; \n\n\t\t\tvar row = e.getDocumentPosition().row;\n\n\t\t\tthis.emit('breakpoint', row);\n\n\t\t\te.stop();\n\n\t\t});\n\t\t\n\t\tthis.on('resize', () => this.editor.resize() );\n\t\t\n\t}\n\t\n\teditorChanged(){\n\t\tclearTimeout(this.uploadTimeout);\n\t\tthis.uploadTimeout = setTimeout( () => this.emit('change', this.editor.getValue()), uploadDelay );\n\t}\n\t\n\t// model events\n\t// new file saved\n\t_fileData(data, opts){\n\t\n\t\tif (data instanceof ArrayBuffer){\n\t\t\t//console.log('arraybuffer');\n\t\t\ttry{\n\t\t\t\tdata = String.fromCharCode.apply(null, new Uint8Array(data));\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// block upload\n\t\tuploadBlocked = true;\n\t\t\n\t\t// put the file into the editor\n\t\tthis.editor.session.setValue(data, -1);\n\t\t\n\t\t// unblock upload\n\t\tuploadBlocked = false;\n\n\t\t// force a syntax check\n\t\tthis.emit('change');\n\t\n\t\t// focus the editor\n\t\tthis._focus(opts.focus);\n\t\t\n\t}\n\t// editor focus has changed\n\t_focus(data){\n\n\t\tif (data && data.line !== undefined && data.column !== undefined)\n\t\t\tthis.editor.gotoLine(data.line, data.column);\n\t\t\t\n\t\tthis.editor.focus();\n\t}\n\t// syntax errors in current file have changed\n\t_currentFileErrors(errors){\n\n\t\t// clear any error annotations on the ace editor\n\t\tthis.editor.session.clearAnnotations();\n\n\t\tif (errors.length >= 1){\t\t\n\t\t\t// errors exist!\n\t\t\t// annotate the errors in this file\n\t\t\tthis.editor.session.setAnnotations(errors);\n\t\t\t\t\t\t\n\t\t}\n\t}\t\n\t// autocomplete settings have changed\n\t_liveAutocompletion(status){\n\t//console.log(status, (parseInt(status) === 1));\n\t\tthis.editor.setOptions({\n\t\t\tenableLiveAutocompletion: (parseInt(status) === 1)\n\t\t});\n\t}\n\t// readonly status has changed\n\t_readOnly(status){\n\t\tif (status){\n\t\t\tthis.editor.setReadOnly(true);\n\t\t} else {\n\t\t\tthis.editor.setReadOnly(false);\n\t\t}\n\t}\n\t// a new file has been opened\n\t_fileName(name, data){\n\t\tcurrentFile = name;\n\t\tthis.__breakpoints(data.breakpoints, data);\n\t}\n\t// breakpoints have been changed\n\t__breakpoints(breakpoints, data){\n\t\t//console.log('setting breakpoints', breakpoints);\n\t\tthis.editor.session.clearBreakpoints();\n\t\tfor (let breakpoint of breakpoints){\n\t\t\tif (breakpoint.file === data.fileName){\n\t\t\t\tthis.editor.session.setBreakpoint(breakpoint.line);\n\t\t\t}\n\t\t}\n\t}\n\t// debugger highlight line has changed\n\t__debugLine(line, data){\n\tconsole.log(line, data.debugFile, currentFile);\n\t\tthis.removeDebuggerMarker();\n\t\t\n\t\t// add new marker at line\n\t\tif (line && data.debugFile === currentFile){\n\t\t\tthis.editor.session.addMarker(new Range(line-1, 0, line-1, 1), \"breakpointMarker\", \"fullLine\");\n\t\t\tthis.editor.gotoLine(line, 0);\n\t\t}\n\t}\n\t// debugger process has started or stopped\n\t_debugRunning(status){\n\t\tif (!status){\n\t\t\tthis.removeDebuggerMarker();\n\t\t}\n\t}\n\t_debugBelaRunning(status){\n\t\tif (status){\n\t\t\tthis.removeDebuggerMarker();\n\t\t}\n\t}\n\t\n\tremoveDebuggerMarker(){\n\t\tvar markers = this.editor.session.getMarkers();\n\t\t\n\t\t// remove existing marker\n\t\tObject.keys(markers).forEach( (key,index) => {\n\t\t\tif (markers[key].clazz === 'breakpointMarker'){\n\t\t\t\tthis.editor.session.removeMarker(markers[key].id);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = EditorView;","var View = require('./View');\n\nvar sourceIndeces = ['cpp', 'c', 'S'];\nvar headerIndeces = ['h', 'hh', 'hpp'];\n\nclass FileView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\t\n\t\t// hack to upload file\n\t\t$('#uploadFileInput').on('change', (e) => {\n\t\t\tfor (let file of e.target.files){\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = (ev) => this.emit('message', 'project-event', {func: 'uploadFile', newFile: file.name, fileData: ev.target.result} );\n\t\t\t\treader.readAsArrayBuffer(file);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// drag and drop file upload on editor\n\t\t$('#editor').on('dragenter dragover drop', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tif (e.type === 'drop'){\n\t\t\t\tfor (let file of e.originalEvent.dataTransfer.files){\n\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\treader.onload = (ev) => this.emit('message', 'project-event', {func: 'uploadFile', newFile: file.name, fileData: ev.target.result} );\n\t\t\t\t\treader.readAsArrayBuffer(file);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\n\t}\n\t\n\t// UI events\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\tnewFile(func){\n\t\tvar name = prompt(\"Enter the name of the new file\");\n\t\tif (name !== null){\n\t\t\tthis.emit('message', 'project-event', {func, newFile: name})\n\t\t}\n\t}\n\tuploadFile(func){\n\t\t$('#uploadFileInput').trigger('click');\n\t}\n\trenameFile(func){\n\t\tvar name = prompt(\"Enter the new name of the file\");\n\t\tif (name !== null){\n\t\t\tthis.emit('message', 'project-event', {func, newFile: name})\n\t\t}\n\t}\n\tdeleteFile(func){\n\t\tvar cont = confirm(\"This can't be undone! Continue?\");\n\t\tif (cont){\n\t\t\tthis.emit('message', 'project-event', {func})\n\t\t}\n\t}\n\topenFile(e){\n\t\tthis.emit('message', 'project-event', {func: 'openFile', newFile: $(e.currentTarget).html()})\n\t}\n\t\n\t// model events\n\t_fileList(files, data){\n\n\t\tvar $files = $('#fileList')\n\t\t$files.empty();\n\n\t\tvar headers = [];\n\t\tvar sources = [];\n\t\tvar resources = [];\n\t\t\n\t\tfor (let i=0; i<files.length; i++){\n\t\t\t\n\t\t\tlet ext = files[i].split('.')[1];\n\t\t\t\n\t\t\tif (sourceIndeces.indexOf(ext) !== -1){\n\t\t\t\tsources.push(files[i]);\n\t\t\t} else if (headerIndeces.indexOf(ext) !== -1){\n\t\t\t\theaders.push(files[i]);\n\t\t\t} else if (files[i]){\n\t\t\t\tresources.push(files[i]);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\theaders.sort();\n\t\tsources.sort();\n\t\tresources.sort();\n\t\t\t\t\n\t\tif (headers.length){\n\t\t\t$('<li></li>').html('Headers:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<headers.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(headers[i]).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (sources.length){\n\t\t\t$('<li></li>').html('Sources:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<sources.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(sources[i]).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (resources.length){\n\t\t\t$('<li></li>').html('Resources:').appendTo($files);\n\t\t}\n\t\tfor (let i=0; i<resources.length; i++){\n\t\t\t$('<li></li>').addClass('sourceFile').html(resources[i]).appendTo($files).on('click', (e) => this.openFile(e));\n\t\t}\n\t\t\n\t\tif (data && data.fileName) this._fileName(data.fileName);\n\t}\n\t_fileName(file, data){\n\n\t\t// select the opened file in the file manager tab\n\t\t$('.selectedFile').removeClass('selectedFile');\n\t\t$('#fileList>li').each(function(){\n\t\t\tif ($(this).html() === file){\n\t\t\t\t$(this).addClass('selectedFile');\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (data && data.currentProject){\n\t\t\t// set download link\n\t\t\t$('#downloadFileLink').attr('href', '/download?project='+data.currentProject+'&file='+file);\n\t\t}\n\t}\n\t\n}\n\nmodule.exports = FileView;","var View = require('./View');\n\nclass ProjectView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t}\n\t\n\t// UI events\n\tselectChanged($element, e){\n\t\t//console.log($element.prop('id'));\n\t\t//if ($element.prop('id') === 'projects'){\n\t\t\tthis.emit('message', 'project-event', {func: $element.data().func, currentProject: $element.val()})\n\t\t//} else if ($element.prop('id') === 'examples'){\n\t\t\t//this.emit('message', 'example-event', {func: $element.data().func, example: $element.val()})\n\t\t//}\n\t}\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\tnewProject(func){\n\t\tvar name = prompt(\"Enter the name of the new project\");\n\t\tif (name !== null){\n\t\t\tthis.emit('message', 'project-event', {func, newProject: name})\n\t\t}\n\t}\n\tsaveAs(func){\n\t\tvar name = prompt(\"Enter the name of the new project\");\n\t\tif (name !== null){\n\t\t\tthis.emit('message', 'project-event', {func, newProject: name})\n\t\t}\n\t}\n\tdeleteProject(func){\n\t\tvar cont = confirm(\"This can't be undone! Continue?\");\n\t\tif (cont){\n\t\t\tthis.emit('message', 'project-event', {func})\n\t\t}\n\t}\n\tcleanProject(func){\n\t\tthis.emit('message', 'project-event', {func});\n\t}\n\t\n\t// model events\n\t_projectList(projects, data){\n\n\t\tvar $projects = $('#projects');\n\t\t$projects.empty();\n\t\t\n\t\t// add an empty option to menu and select it\n\t\tvar opt = $('<option></option>').attr({'value': '', 'selected': 'selected'}).html('--Projects--').appendTo($projects);\n\n\t\t// fill project menu with projects\n\t\tfor (let i=0; i<projects.length; i++){\n\t\t\tif (projects[i] && projects[i] !== 'undefined' && projects[i] !== 'exampleTempProject' && projects[i][0] !== '.'){\n\t\t\t\tvar opt = $('<option></option>').attr('value', projects[i]).html(projects[i]).appendTo($projects);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (data && data.currentProject) this._currentProject(data.currentProject);\n\t\t\n\t}\n\t_exampleList(examples){\n\t\n\t\tvar $examples = $('#examples');\n\t\t$examples.empty();\n\t\t\n\t\t// add an empty option to menu and select it\n\t\tvar opt = $('<option></option>').attr({'value': '', 'selected': 'selected'}).html('--Examples--').appendTo($examples);\n\t\t\n\t\t// fill project menu with examples\n\t\tfor (let i=0; i<examples.length; i++){\n\t\t\tif (examples[i] && examples[i] !== 'undefined' && examples[i] !== 'exampleTempProject' && examples[i][0] !== '.'){\n\t\t\t\tvar opt = $('<option></option>').attr('value', examples[i]).html(examples[i]).appendTo($examples);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t_currentProject(project){\n\t\n\t\t// unselect currently selected project\n\t\t$('#projects').find('option').filter(':selected').attr('selected', '');\n\t\t\n\t\tif (project === 'exampleTempProject'){\n\t\t\t// select no project\n\t\t\t$('#projects option:first-child').attr('selected', 'selected');\n\t\t} else {\n\t\t\t// select new project\n\t\t\t$('#projects option[value=\"'+project+'\"]').attr('selected', 'selected');\n\t\t\t// unselect currently selected example\n\t\t\t$('#examples').find('option').filter(':selected').attr('selected', '');\n\t\t\t// select no example\n\t\t\t$('#examples option:first-child').attr('selected', 'selected');\n\t\t}\n\t\t\n\t\t// set download link\n\t\t$('#downloadLink').attr('href', '/download?project='+project);\n\t}\n\t\n}\n\nmodule.exports = ProjectView;","var View = require('./View');\n\nclass SettingsView extends View {\n\t\n\tconstructor(className, models, settings){\n\t\tsuper(className, models, settings);\n\t\t//this.$elements.filter('input').on('change', (e) => this.selectChanged($(e.currentTarget), e));\n\t\tthis.settings.on('change', (data) => this._IDESettings(data) );\n\t\tthis.$elements.filterByData = function(prop, val) {\n\t\t\treturn this.filter(\n\t\t\t\tfunction() { return $(this).data(prop)==val; }\n\t\t\t);\n\t\t}\n\t}\n\t\n\tselectChanged($element, e){\n\t\tvar data = $element.data();\n\t\tvar func = data.func;\n\t\tvar key = data.key;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func, key, $element.val());\n\t\t}\n\t}\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\tinputChanged($element, e){\n\t\tvar data = $element.data();\n\t\tvar func = data.func;\n\t\tvar key = data.key;\n\t\tvar type = $element.prop('type');\n\t\tif (type === 'number' || type === 'text'){\n\t\t\tif (func && this[func]){\n\t\t\t\tthis[func](func, key, $element.val());\n\t\t\t}\n\t\t} else if (type === 'checkbox'){\n\t\t\tif (func && this[func]){\n\t\t\t\tthis[func](func, key, $element.is(':checked') ? 1 : 0);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsetCLArg(func, key, value){\n\t\tthis.emit('project-settings', {func, key, value});\n\t}\n\trestoreDefaultCLArgs(func){\n\t\tthis.emit('project-settings', {func});\n\t}\n\t\n\tsetIDESetting(func, key, value){\n\tconsole.log(func, key, value);\n\t\tthis.emit('IDE-settings', {func, key, value: value});\n\t}\n\trestoreDefaultIDESettings(func){\n\t\tthis.emit('IDE-settings', {func});\n\t}\n\t\n\t// model events\n\t_CLArgs(data){\n\t\tvar fullString = '';\n\t\tfor (let key in data){\n\t\t\tthis.$elements.filterByData('key', key).val(data[key]).prop('checked', data[key]);\n\t\t\tfullString += ((key === 'user') ? '' : key)+data[key]+' ';\n\t\t}\n\t\t$('#C_L_ARGS').val(fullString);\n\t}\n\t_IDESettings(data){\n\t\tfor (let key in data){\n\t\t\tthis.$elements.filterByData('key', key).val(data[key]).prop('checked', data[key]);\n\t\t}\n\t}\n\t_breakpoints(value, keys){\n\t\tthis.emit('project-settings', {func: 'setBreakpoints', value});\n\t}\n}\n\nmodule.exports = SettingsView;","var View = require('./View');\n\n// private variables\nvar _tabsOpen = false;\n\nclass TabView extends View {\n\t\n\tconstructor(){\n\t\n\t\tsuper('tab');\n\n\t\t// open/close tabs \n\t\t$('#flexit').on('click', () => {\n\t\t\t//console.log(\"CLICKY\");\n\t\t\tif (_tabsOpen){\n\t\t\t\tthis.closeTabs();\n\t\t\t} else {\n\t\t\t\tthis.openTabs();\n\t\t\t}\n\t\t});\n\n\t\t$('label').on('click', (e) => {\n\t\t\tif (!_tabsOpen){\n\t\t\t\tthis.openTabs();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// golden layout\n\t\tvar layout = new GoldenLayout({\n\t\t\tsettings:{\n\t\t\t\thasHeaders: false,\n\t\t\t\tconstrainDragToContainer: true,\n\t\t\t\treorderEnabled: false,\n\t\t\t\tselectionEnabled: false,\n\t\t\t\tpopoutWholeStack: false,\n\t\t\t\tblockedPopoutsThrowError: true,\n\t\t\t\tclosePopoutsOnUnload: true,\n\t\t\t\tshowPopoutIcon: false,\n\t\t\t\tshowMaximiseIcon: false,\n\t\t\t\tshowCloseIcon: false\n\t\t\t},\n\t\t\tdimensions: {\n\t\t\t\tborderWidth: 5,\n\t\t\t\tminItemHeight: 10,\n\t\t\t\tminItemWidth: 10,\n\t\t\t\theaderHeight: 20,\n\t\t\t\tdragProxyWidth: 300,\n\t\t\t\tdragProxyHeight: 200\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tclose: 'close',\n\t\t\t\tmaximise: 'maximise',\n\t\t\t\tminimise: 'minimise',\n\t\t\t\tpopout: 'open in new window'\n\t\t\t},\n\t\t\tcontent: [{\n\t\t\t\ttype: 'column',\n\t\t\t\tcontent: [{\n\t\t\t\t\ttype:'row',\n\t\t\t\t\tcontent: [{\n\t\t\t\t\t\ttype:'component',\n\t\t\t\t\t\tcomponentName: 'Editor',\n\t\t\t\t\t}]\n\t\t\t\t}, {\n\t\t\t\t\ttype:'component',\n\t\t\t\t\tcomponentName: 'Console',\n\t\t\t\t\theight: 25\n\t\t\t\t}]\n\t\t\t}]\n\t\t});\n\t\tlayout.registerComponent( 'Editor', function( container, componentState ){\n\t\t\tcontainer.getElement().append($('#innerContent'));\n\t\t});\n\t\tlayout.registerComponent( 'Console', function( container, componentState ){\n\t\t\tcontainer.getElement().append($('#beaglert-console'));\n\t\t});\n\t\t\n\t\tlayout.init();\n\t\tlayout.on('initialised', () => this.emit('change') );\n\t\tlayout.on('stateChanged', () => this.emit('change') );\n\t\t\n\t\t$(window).on('resize', () => {\n\t\t\tif (_tabsOpen){\n\t\t\t\tthis.openTabs();\n\t\t\t} else {\n\t\t\t\tthis.closeTabs();\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\t\n\topenTabs(){\n\t\t$('#editor').css('right', '500px');\n\t\t$('#right').css('left', window.innerWidth - 500 + 'px');\n\t\t_tabsOpen = true;\n\t\tthis.emit('change');\n\t\t$('#tab-0').addClass('open');\n\t}\n\n\tcloseTabs(){\n\t\t$('#editor').css('right', '60px');\n\t\t$('#right').css('left', window.innerWidth - 60 + 'px');\n\t\t_tabsOpen = false;\n\t\tthis.emit('change');\n\t\t$('#tab-0').removeClass('open');\n\t}\n\t\n}\n\nmodule.exports = new TabView();","var View = require('./View');\n\nclass ToolbarView extends View {\n\t\n\tconstructor(className, models){\n\t\tsuper(className, models);\n\t\tconsole.log(this.$elements);\n\t\tthis.$elements.on('click', (e) => this.buttonClicked($(e.currentTarget), e));\n\t\t\n\t\t$('#run')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-1').html('<p>Run</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-1').html('');\n\t\t\t});\n\t\t\n\t\t$('#stop')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-1').html('<p>Stop</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-1').html('');\n\t\t\t});\n\n\t\t$('#new-tab')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-2').html('<p>New Tab</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-2').html('');\n\t\t\t});\n\t\t\n\t\t$('#download')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-2').html('<p>Download project</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-2').html('');\n\t\t\t});\n\n\t\t$('#console')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-3').html('<p>Clear console</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-3').html('');\n\t\t\t});\n\t\t\n\t\t$('#scope')\n\t\t\t.mouseover(function() {\n\t\t\t\t$('#control-text-3').html('<p>Open scope</p>');\n\t\t\t})\n\t\t\t.mouseout(function() {\n\t\t\t\t$('#control-text-3').html('');\n\t\t\t});\n\t}\n\t\n\t// UI events\n\tbuttonClicked($element, e){\n\t\tvar func = $element.data().func;\n\t\tif (func && this[func]){\n\t\t\tthis[func](func);\n\t\t}\n\t}\n\t\n\trun(func){\n\t\tthis.emit('process-event', func);\n\t}\n\t\n\tstop(func){\n\t\tthis.emit('process-event', func);\n\t}\n\t\n\tclearConsole(){\n\t\tthis.emit('clear-console');\n\t}\n\t\n\t// model events\n\t__running(status){\n\t\tif (status){\n\t\t\tif (!$('#run').hasClass('spinning')){\n\t\t\t\t$('#run').addClass('spinning');\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#run').hasClass('spinning')){\n\t\t\t\t$('#run').removeClass('spinning');\n\t\t\t}\n\t\t}\n\t}\n\t__checkingSyntax(status){\n\t\tif (status){\n\t\t\t$('#status').css('background', 'url(\"images/toolbar.png\") -210px 35px');\n\t\t} else {\n\t\t\t//this.syntaxTimeout = setTimeout(() => $('#status').css('background', 'url(\"images/toolbar.png\") -140px 35px'), 10);\n\t\t}\n\t}\n\t__allErrors(errors){\n\t\t//if (this.syntaxTimeout) clearTimeout(this.syntaxTimeout); \n\t\tif (errors.length){\n\t\t\t$('#status').css('background', 'url(\"images/toolbar.png\") -175px 35px');\n\t\t} else {\n\t\t\t$('#status').css('background', 'url(\"images/toolbar.png\") -140px 35px');\n\t\t}\n\t}\n\t\n\t_CPU(data){\n\n\t\tvar ide = data.syntaxCheckProcess + data.buildProcess + data.node + data.gdb;\n\t\tvar bela = 0;\n\t\t\n\t\tif (data.bela != 0){\n\t\t\n\t\t\t// extract the data from the output\n\t\t\tvar lines = data.bela.split('\\n');\n\t\t\tvar taskData = [], output = [];\n\t\t\tfor (var j=0; j<lines.length; j++){\n\t\t\t\ttaskData.push([]);\n\t\t\t\tlines[j] = lines[j].split(' ');\n\t\t\t\tfor (var k=0; k<lines[j].length; k++){\n\t\t\t\t\tif (lines[j][k]){\n\t\t\t\t\t\ttaskData[j].push(lines[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tfor (var j=0; j<taskData.length; j++){\n\t\t\t\tif (taskData[j].length){\n\t\t\t\t\tvar proc = {\n\t\t\t\t\t\t'name'\t: taskData[j][7],\n\t\t\t\t\t\t'cpu'\t: taskData[j][6],\n\t\t\t\t\t\t'msw'\t: taskData[j][2],\n\t\t\t\t\t\t'csw'\t: taskData[j][3]\n\t\t\t\t\t};\n\t\t\t\t\t// ignore uninteresting data\n\t\t\t\t\tif (proc && proc.name && proc.name !== 'ROOT' && proc.name !== 'NAME' && proc.name !== 'IRQ29:'){\n\t\t\t\t\t\toutput.push(proc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var j=0; j<output.length; j++){\n\t\t\t\tif (output[j].cpu){\n\t\t\t\t\tbela += parseFloat(output[j].cpu);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\n\t\t}\n\n\t\t$('#ide-cpu').html('IDE: '+ide.toFixed(1)+'%');\n\t\t$('#bela-cpu').html('Bela: '+bela.toFixed(1)+'%');\n\t}\n\t\n\t_cpuMonitoring(value){\n\t\tif (parseInt(value))\n\t\t\t$('#ide-cpu, #bela-cpu').css('visibility', 'visible');\n\t\telse\n\t\t\t$('#ide-cpu, #bela-cpu').css('visibility', 'hidden');\n\t}\n\t\n\t_debugBelaRunning(status){\n\t\tif (status){\n\t\t\tif (!$('#run').hasClass('spinning')){\n\t\t\t\t$('#run').addClass('spinning');\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#run').hasClass('spinning')){\n\t\t\t\t$('#run').removeClass('spinning');\n\t\t\t}\n\t\t}\n\t}\n\t_debugRunning(status){\n\t\tif (!status && $('#run').hasClass('spinning'))  $('#run').removeClass('spinning');\n\t}\n\t\n}\n\nmodule.exports = ToolbarView;","var EventEmitter = require('events').EventEmitter;\n\nclass View extends EventEmitter{\n\n\tconstructor(CSSClassName, models, settings){\n\t\tsuper();\n\t\tthis.className = CSSClassName;\n\t\tthis.models = models;\n\t\tthis.settings = settings;\n\t\tthis.$elements = $('.'+CSSClassName);\n\t\tthis.$parents = $('.'+CSSClassName+'-parent');\n\t\t\n\t\tif (models){\n\t\t\tfor (var i=0; i<models.length; i++){\n\t\t\t\tmodels[i].on('change', (data, changedKeys) => {\n\t\t\t\t\tthis.modelChanged(data, changedKeys);\n\t\t\t\t});\n\t\t\t\tmodels[i].on('set', (data, changedKeys) => {\n\t\t\t\t\tthis.modelSet(data, changedKeys);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.$elements.filter('select').on('change', (e) => this.selectChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('input').on('input', (e) => this.inputChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('input[type=checkbox]').on('change', (e) => this.inputChanged($(e.currentTarget), e));\n\t\tthis.$elements.filter('button').on('click', (e) => this.buttonClicked($(e.currentTarget), e));\n\t\t\n\t}\n\t\n\tmodelChanged(data, changedKeys){\n\t\tfor (let value of changedKeys){\n\t\t\tif (this['_'+value]){\n\t\t\t\tthis['_'+value](data[value], data, changedKeys);\n\t\t\t}\n\t\t}\n\t}\n\tmodelSet(data, changedKeys){\n\t\tfor (let value of changedKeys){\n\t\t\tif (this['__'+value]){\n\t\t\t\tthis['__'+value](data[value], data, changedKeys);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tselectChanged(element, e){}\n\tbuttonClicked(element, e){}\n\t\n\tprintElements(){\n\t\tconsole.log('elements:', this.$elements, 'parents:', this.$parents);\n\t}\n\t\t\n}\n\nmodule.exports = View;","'use strict';\nvar EventEmitter = require('events').EventEmitter;\n//var $ = require('jquery-browserify');\n\n// module variables\nvar numElements = 0, maxElements = 200, consoleDelete = true;\n\nclass Console extends EventEmitter {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.$element = $('#beaglert-consoleWrapper');\n\t\tthis.parent = document.getElementById('beaglert-console');\n\t}\n\t\n\tprint(text, className, id, onClick){\n\t\tvar el = $('<div></div>').addClass('beaglert-console-'+className).appendTo(this.$element);\n\t\tif (id) el.prop('id', id);\n\t\t$('<span></span>').html(text).appendTo(el);\n\t\tif (numElements++ > maxElements) this.clear(numElements/4);\n\t\tif (onClick) el.on('click', onClick);\n\t\treturn el;\n\t}\n\n\t// log an unhighlighted message to the console\n\tlog(text){\n\t\tvar msgs = text.split('\\n');\n\t\tfor (let i=0;  i<msgs.length; i++){\n\t\t\tif (msgs[i] !== '' && msgs[i] !== ' '){\n\t\t\t\tthis.print(msgs[i], 'log');\n\t\t\t}\n\t\t}\n\t\tthis.scroll();\n\t}\n\t// log a warning message to the console\n\twarn(text, id){\n\t\tvar msgs = text.split('\\n');\n\t\tfor (let i=0;  i<msgs.length; i++){\n\t\t\tif (msgs[i] !== ''){\n\t\t\t\tthis.print(msgs[i], 'warning', id, function(){ \n\t\t\t\t\tvar $el = $(this);\n\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t\t$el.on('transitionend', () => {\n\t\t\t\t\t\tif ($el.hasClass('beaglert-console-collapsed')){\n\t\t\t\t\t\t\t$el.remove();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.scroll();\n\t}\n\t\n\tnewErrors(errors){\n\t\n\t\t$('.beaglert-console-ierror, .beaglert-console-iwarning').remove();\n\t\t\n\t\tfor (let err of errors){\n\t\t\n\t\t\t// create the element and add it to the error object\n\t\t\tvar div = $('<div></div>').addClass('beaglert-console-i'+err.type)\n\t\t\t\n\t\t\t// create the link and add it to the element\n\t\t\tvar anchor = $('<a></a>').html(err.text).appendTo(div);\n\t\t\t\n\t\t\tdiv.appendTo(this.$element);\n\t\t\t\n\t\t\tif (err.currentFile){\n\t\t\t\tdiv.on('click', () => this.emit('focus', {line: err.row+1, column: err.column-1}) );\n\t\t\t} else {\n\t\t\t\tdiv.on('click', () => this.emit('open-file', err.file, {line: err.row+1, column: err.column-1}) );\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tthis.scroll();\n\t}\n\t\n\t// log a positive notification to the console\n\t// if persist is not true, the notification will be removed quickly\n\t// otherwise it will just fade\n\tnotify(notice, id){\n\t\t$('#'+id).remove();\n\t\tvar el = this.print(notice, 'notify', id);\n\t\tthis.scroll();\n\t\treturn el;\n\t}\n\t\n\tfulfill(message, id, persist){\n\t\tvar el = document.getElementById(id);\n\t\t//if (!el) el = this.notify(message, id);\n\t\tvar $el = $(el);\n\t\t$el.appendTo(this.$element);//.removeAttr('id');\n\t\t$el.html($el.html()+message);\n\t\tsetTimeout( () => $el.addClass('beaglert-console-faded'), 500);\n\t\tif (!persist){\n\t\t\t$el.on('transitionend', () => {\n\t\t\t\tif ($el.hasClass('beaglert-console-collapsed')){\n\t\t\t\t\t$el.remove();\n\t\t\t\t} else {\n\t\t\t\t\t$el.addClass('beaglert-console-collapsed');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\treject(message, id, persist){\n\t\tvar el = document.getElementById(id);\n\t\t//if (!el) el = this.notify(message, id);\n\t\tvar $el = $(el);\n\t\t$el.appendTo(this.$element);//.removeAttr('id');\n\t\t$el.html($el.html()+message);\n\t\t$el.addClass('beaglert-console-rejectnotification');\n\t\tsetTimeout( () => $el.removeClass('beaglert-console-rejectnotification').addClass('beaglert-console-faded'), 500);\n\t\t$el.on('click', () => $el.addClass('beaglert-console-collapsed').on('transitionend', () => $el.remove() ));\n\t}\n\t\n\t// clear the console\n\tclear(number){\n\t\tif (!consoleDelete) return;\n\t\tif (number){\n\t\t\t$(\"#beaglert-consoleWrapper > div:lt(\"+parseInt(number)+\")\").remove();\n\t\t\tnumElements -= parseInt(number);\n\t\t} else {\n\t\t\t$('#beaglert-consoleWrapper > div').remove();\n\t\t\tnumElements = 0;\n\t\t}\n\t}\n\t\n\t// force the console to scroll to the bottom\n\tscroll(){\n\t\tsetTimeout((() => this.parent.scrollTop = this.parent.scrollHeight), 0);\n\t}\n\t\n\tsetConsoleDelete(to){\n\t\tconsoleDelete = to;\n\t}\n\t\n};\n\nmodule.exports = new Console();\n\n// gracefully remove a console element after an event ((this) must be bound to the element)\n/*function dismiss(){\n\tif (IDE.getSetting('consoleAnimations')) $(this).addClass('beaglert-console-collapsed');\n\tsetTimeout(() => {\n\t\tif ($.contains(parent, this)){\n\t\t\t$(this).remove();\n\t\t\tnumElements -= 1;\n\t\t}\n\t}, 500);\n}*/","//var $ = require('jquery-browserify');\nvar IDE;\n\n$(() => {\n\tIDE = require('./IDE-browser');\n});\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n"]}